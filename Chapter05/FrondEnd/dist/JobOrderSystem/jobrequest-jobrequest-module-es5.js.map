{"version":3,"sources":["webpack:///src/app/data_service/jobrequest.service.ts","webpack:///src/app/jobrequest/jobrequest-routing.module.ts","webpack:///src/app/jobrequest/jobrequest.module.ts","webpack:///src/app/jobrequest/jobrequest/jobrequestcomponent.ts","webpack:///src/app/jobrequest/jobrequest/jobrequest.component.html","webpack:///src/app/jobrequest/jobrequestdetail/jobrequestdetail.component.ts","webpack:///src/app/jobrequest/jobrequestdetail/jobrequestdetail.component.html","webpack:///src/app/jobrequest/jobrequestlist/jobrequestlist.component.ts","webpack:///src/app/jobrequest/jobrequestlist/jobrequestlist.component.html"],"names":["JobrequestService","authorizationService","http","config","request","user","getLoggedUser","requestedBy","userid","post","nodeUrl","getOptions","get","requestId","opt","headers","set","providedIn","routes","path","component","JobrequestRoutingModule","forChild","imports","exports","JobrequestModule","declarations","JobrequestComponent","service","jobRequest","showError","showSuccess","res","successMessage","error","errorMessage","form","saveJobRequest","subscribe","handleSuccess","handleError","onSubmit","selector","templateUrl","styleUrls","JobrequestdetailComponent","activatedRoute","snapshot","paramMap","getJobById","jobId","getJobRequestById","window","history","back","JobrequestlistComponent","getJobList","getJobRequestList","requestList"],"mappings":"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","file":"jobrequest-jobrequest-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IJobrequest } from '../models/jobrequest';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthorizationService } from '../login/authorization.service';\r\nimport { Loggeduser } from '../models/loggeduser';\r\nimport { ConfigService } from './config.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobrequestService {\r\n\r\n  user: Loggeduser;\r\n\r\n /* requestList: IJobrequest[] = [\r\n    { requestId: '100', requestedBy: 'user', requestDate: '', jobDescription: 'New Job', jobType:'Masonary', contactNo: '055548147', city:'Dubai', address: 'New addres', status:'Open' },\r\n    { requestId: '200', requestedBy: 'user', requestDate: '', jobDescription: 'New Job 2', jobType:'Carpentry', contactNo: '055548147', city:'Dubai', address: 'New addres', status:'Open' }\r\n  ];*/\r\n\r\n  constructor(private authorizationService: AuthorizationService,private http: HttpClient, private config: ConfigService) { }\r\n\r\n  saveJobRequest(request: IJobrequest) : Observable<any>{\r\n    //HTTP Call here\r\n    this.user = this.authorizationService.getLoggedUser();\r\n    request.requestedBy = this.user.userid; //Update the Logged in User ID\r\n    return this.http.post(this.config.nodeUrl + '/jobs',request, this.getOptions());\r\n  }\r\n\r\n  getJobRequestList(): Observable<IJobrequest[]>{\r\n    //Get the Logged in User\r\n    this.user = this.authorizationService.getLoggedUser();\r\n    return this.http.get<IJobrequest[]>(this.config.nodeUrl + '/jobs');\r\n     \r\n  }\r\n\r\n  getJobRequestById(requestId: string): Observable<any>{\r\n    return this.http.get<IJobrequest>(this.config.nodeUrl + '/job?id='+requestId);\r\n  }\r\n\r\n  getOptions(): any{\r\n    let opt = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\r\n    return opt;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { JobrequestlistComponent } from './jobrequestlist/jobrequestlist.component';\r\nimport { JobrequestComponent } from './jobrequest/jobrequestcomponent';\r\nimport { JobrequestdetailComponent } from './jobrequestdetail/jobrequestdetail.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: JobrequestlistComponent},\r\n  { path: 'request', component: JobrequestComponent },\r\n  { path: 'request/:id', component: JobrequestdetailComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class JobrequestRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { JobrequestRoutingModule } from './jobrequest-routing.module';\r\nimport { JobrequestlistComponent } from './jobrequestlist/jobrequestlist.component';\r\nimport { JobrequestComponent } from './jobrequest/jobrequestcomponent';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { JobrequestdetailComponent } from './jobrequestdetail/jobrequestdetail.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [JobrequestlistComponent, JobrequestComponent, JobrequestdetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    JobrequestRoutingModule\r\n  ]\r\n})\r\nexport class JobrequestModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IJobrequest } from 'src/app/models/jobrequest';\r\nimport { JobrequestService } from 'src/app/data_service/jobrequest.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'jos-jobrequest',\r\n  templateUrl: './jobrequest.component.html',\r\n  styleUrls: ['./jobrequest.component.css']\r\n})\r\nexport class JobrequestComponent implements OnInit {\r\n\r\n  jobRequest = {} as IJobrequest;\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  showSuccess: boolean = false;\r\n  successMessage: string;\r\n\r\n\r\n  constructor(private service: JobrequestService)\r\n  {} \r\n  \r\n\r\n  ngOnInit(): void {\r\n    \r\n\r\n  }\r\n\r\n  handleSuccess(res) {\r\n    debugger;\r\n    this.showSuccess = true;\r\n    this.successMessage = 'Job Created Successfully';\r\n  }\r\n  handleError(error) {\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n  onSubmit(form: NgForm) {\r\n    this.service.saveJobRequest(this.jobRequest).subscribe(\r\n      res => this.handleSuccess(res),\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<h1 class=\"display-4\">Create Job Request</h1>\r\n<div *ngIf=\"showSuccess\" class=\"alert alert-success\">\r\n    {{successMessage}}\r\n</div>\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n<div>\r\n    <form #requestForm=\"ngForm\" (ngSubmit)=\"onSubmit(requestForm)\">\r\n        <div class=\"form-group\">\r\n            <label for=\"jobType\">Type of Job</label>\r\n            <select id=\"jobType\" class=\"form-control\" name=\"jobType\" [(ngModel)]=\"jobRequest.jobType\">\r\n                <option selected>Choose</option>\r\n                <option>Carpentry</option>\r\n                <option>Masonary</option>\r\n                <option>Plumbing</option>\r\n                <option>Air Conditioning</option>\r\n                <option>Others</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"jobDescription\">Description</label>\r\n            <textarea id=\"jobDescription\" required class=\"form-control\" name=\"jobDescription\"\r\n            [(ngModel)]=\"jobRequest.jobDescription\" #descriptionProperty=\"ngModel\"  \r\n            placeholder=\"Please enter the Job reqeuest details\"></textarea>\r\n            <span class=\"help-block\" *ngIf=\"(descriptionProperty.touched || descriptionProperty.dirty) && descriptionProperty.errors\">\r\n                <small *ngIf=\"descriptionProperty.errors.required\">Please enter the description </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label id=\"requestDate\">Preferred Date and Time</label>\r\n            <input id=\"requestDate\" class=\"form-control\" type=\"datetime-local\" name=\"requestDate\"\r\n            [(ngModel)]=\"jobRequest.requestDate\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"contactNo\">Contact No.</label>\r\n            <input id=\"contactNo\" required class=\"form-control\"\r\n            type=\"tel\" #contactProperty=\"ngModel\" name=\"contactNo\" [(ngModel)]=\"jobRequest.contactNo\">\r\n            <span class=\"help-block\" *ngIf=\"(contactProperty.touched || contactProperty.dirty) && contactProperty.errors\">\r\n                <small *ngIf=\"contactProperty.errors.required\">Please enter contact no. </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"address\">Address</label>\r\n            <input id=\"address\" required type=\"text\" class=\"form-control\" \r\n            #addressProperty=\"ngModel\" name=\"address\" [(ngModel)]=\"jobRequest.address\">\r\n            <span class=\"help-block\" *ngIf=\"(addressProperty.touched || addressProperty.dirty) && addressProperty.errors\">\r\n                <small *ngIf=\"addressProperty.errors.required\">Please enter the address </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"city\">City</label>\r\n            <input id=\"city\" required type=\"text\" class=\"form-control\" \r\n            #cityProperty=\"ngModel\" name=\"city\" [(ngModel)]=\"jobRequest.city\">\r\n            <span class=\"help-block\" *ngIf=\"(cityProperty.touched || cityProperty.dirty) && cityProperty.errors\">\r\n                <small *ngIf=\"cityProperty.errors.required\">Please enter the city </small>\r\n            </span>\r\n        </div>        \r\n        <button type=\"submit\" class=\"btn btn-dark\" [disabled]=\"!requestForm.valid\">Send Request</button>\r\n    </form>\r\n</div>\r\n<hr>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { JobrequestService } from 'src/app/data_service/jobrequest.service';\r\nimport { IJobrequest } from 'src/app/models/jobrequest';\r\n\r\n@Component({\r\n  selector: 'jos-jobrequestdetail',\r\n  templateUrl: './jobrequestdetail.component.html',\r\n  styleUrls: ['./jobrequestdetail.component.css']\r\n})\r\nexport class JobrequestdetailComponent implements OnInit {\r\n\r\n  jobRequest = {} as IJobrequest;\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n\r\n  constructor(private service: JobrequestService, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    const requestId = this.activatedRoute.snapshot.paramMap.get('id');\r\n    this.getJobById(requestId);\r\n  }\r\n\r\n  handleError(error) {\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n\r\n  getJobById(jobId: string) {\r\n    this.service.getJobRequestById(jobId).subscribe(\r\n      res => { this.jobRequest = res; debugger; },\r\n      error => {\r\n        return this.handleError(error);\r\n      }\r\n    )\r\n  }\r\n  back() {\r\n    window.history.back();\r\n  }\r\n}\r\n","<h1 class=\"display-4\">Job Request</h1>\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n<div class=\"card\"> \r\n    <div class=\"card-header\">\r\n        <h4>Job Request</h4>\r\n      </div>    \r\n    <dl class=\"card-body\">\r\n        <dt class=\"col-sm-3\">Type</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.jobType}}</dd>\r\n        <dt class=\"col-sm-3\">Description</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.jobDescription}}</dd>     \r\n        <dt class=\"col-sm-3\">Date</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.requestDate}}</dd>  \r\n        <dt class=\"col-sm-3\">Contact No</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.contactNo}}</dd>     \r\n        <dt class=\"col-sm-3\">Address</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.address}}</dd>   \r\n        <dt class=\"col-sm-3\">City</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.city}}</dd>    \r\n        <dt class=\"col-sm-3\">Status</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.status}}</dd>                                                \r\n    </dl>\r\n</div>\r\n<hr>\r\n<button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"back()\">Back</button>","import { Component, OnInit } from '@angular/core';\r\nimport { IJobrequest } from 'src/app/models/jobrequest';\r\nimport { JobrequestService } from 'src/app/data_service/jobrequest.service';\r\n\r\n@Component({\r\n  selector: 'jos-jobrequestlist',\r\n  templateUrl: './jobrequestlist.component.html',\r\n  styleUrls: ['./jobrequestlist.component.css']\r\n})\r\nexport class JobrequestlistComponent implements OnInit {\r\n\r\n  requestList: IJobrequest[];\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  constructor(private service: JobrequestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getJobList();\r\n  }\r\n\r\n  getJobList(){\r\n    this.service.getJobRequestList().subscribe(\r\n      res=> { this.requestList = res; debugger; },\r\n      error=> this.handleError(error)\r\n    );\r\n  }\r\n\r\n  handleError(error){\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n}\r\n","<h1 class=\"display-4\">Job Requests</h1>\r\n\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n\r\n<div>\r\n    <button class=\"btn btn-outline-secondary\" type=\"button\" routerLink=\"/jobrequest/request\">Create Job Request</button>\r\n</div>\r\n<br>\r\n<div>\r\n    \r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Request Date</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let request of requestList\">\r\n                <td>{{request.jobType}}</td>\r\n                <td>{{request.jobDescription}}</td>\r\n                <td>{{request.requestDate}}</td>\r\n                <td>{{request.status}}</td>\r\n                <td><button type=\"button\" class=\"btn btn-outline-dark\" [routerLink]=\"['/jobrequest/request',request._id]\">Display</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>"]}