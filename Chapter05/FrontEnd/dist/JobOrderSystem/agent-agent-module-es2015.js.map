{"version":3,"sources":["./src/app/agent/agent-jobprocess/agent-jobprocess.component.ts","./src/app/agent/agent-jobprocess/agent-jobprocess.component.html","./src/app/agent/agent-routing.module.ts","./src/app/agent/agent.module.ts","./src/app/agent/agentlist/agentlist.component.ts","./src/app/agent/agentlist/agentlist.component.html","./src/app/data_service/agent.service.ts"],"names":[],"mappings":"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","file":"agent-agent-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AgentService } from 'src/app/data_service/agent.service';\r\nimport { IAgent } from 'src/app/models/agent';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'jos-agent-jobprocess',\r\n  templateUrl: './agent-jobprocess.component.html',\r\n  styleUrls: ['./agent-jobprocess.component.css']\r\n})\r\nexport class AgentJobprocessComponent implements OnInit {\r\n\r\n  agentJob = {} as IAgent;\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  showSuccess: boolean = false;\r\n  successMessage: string;\r\n\r\n  constructor(private service:AgentService, private activatedRoute:ActivatedRoute) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    const requestId = this.activatedRoute.snapshot.paramMap.get('id');\r\n    this.getAgentJobById(requestId);\r\n  }\r\n\r\n  handleError(error) {\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n  handleSuccess(res) {\r\n    this.showSuccess = true;\r\n    this.successMessage = 'Job Saved Successfully';\r\n  }\r\n  processAgentJob(form: NgForm) {\r\n    this.service.saveAgentAction(this.agentJob).subscribe(\r\n      res => this.handleSuccess(res),\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  getAgentJobById(jobId: string) {\r\n    this.service.getAgentJobById(jobId).subscribe(\r\n      res => { this.agentJob = res; },\r\n      error => {\r\n        return this.handleError(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  back() {\r\n    window.history.back();\r\n  }\r\n\r\n}\r\n","<h1 class=\"display-4\">Process Job Request</h1>\r\n<div *ngIf=\"showSuccess\" class=\"alert alert-success\">\r\n    {{successMessage}}\r\n</div>\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n<div>\r\n    <form #requestForm=\"ngForm\" (ngSubmit)=\"processAgentJob(requestForm)\">\r\n        <div class=\"form-group\">\r\n            <label for=\"jobType\">Type of Job</label>\r\n            <select id=\"jobType\" class=\"form-control\" name=\"jobType\" [(ngModel)]=\"agentJob.jobType\" disabled=\"false\">\r\n                <option selected>Choose</option>\r\n                <option>Carpentry</option>\r\n                <option>Masonary</option>\r\n                <option>Plumbing</option>\r\n                <option>Air Conditioning</option>\r\n                <option>Others</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"jobDescription\">Description</label>\r\n            <textarea id=\"jobDescription\" required class=\"form-control\" name=\"jobDescription\"\r\n            [(ngModel)]=\"agentJob.jobDescription\" #descriptionProperty=\"ngModel\"  \r\n            placeholder=\"Please enter the Job reqeuest details\"  disabled=\"false\"></textarea>\r\n            <span class=\"help-block\" *ngIf=\"(descriptionProperty.touched || descriptionProperty.dirty) && descriptionProperty.errors\">\r\n                <small *ngIf=\"descriptionProperty.errors.required\">Please enter the description </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label id=\"requestDate\">Preferred Date and Time</label>\r\n            <input id=\"requestDate\" class=\"form-control\" type=\"datetime-local\" name=\"requestDate\"\r\n            [(ngModel)]=\"agentJob.requestDate\"  disabled=\"false\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"contactNo\">Contact No.</label>\r\n            <input id=\"contactNo\" required class=\"form-control\"\r\n            type=\"tel\" #contactProperty=\"ngModel\" name=\"contactNo\" [(ngModel)]=\"agentJob.contactNo\"  disabled=\"false\">\r\n            <span class=\"help-block\" *ngIf=\"(contactProperty.touched || contactProperty.dirty) && contactProperty.errors\">\r\n                <small *ngIf=\"contactProperty.errors.required\">Please enter contact no. </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"address\">Address</label>\r\n            <input id=\"address\" required type=\"text\" class=\"form-control\" \r\n            #addressProperty=\"ngModel\" name=\"address\" [(ngModel)]=\"agentJob.address\"  disabled=\"false\">\r\n            <span class=\"help-block\" *ngIf=\"(addressProperty.touched || addressProperty.dirty) && addressProperty.errors\">\r\n                <small *ngIf=\"addressProperty.errors.required\">Please enter the address </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"city\">City</label>\r\n            <input id=\"city\" required type=\"text\" class=\"form-control\" \r\n            #cityProperty=\"ngModel\" name=\"city\" [(ngModel)]=\"agentJob.city\"  disabled=\"false\">\r\n            <span class=\"help-block\" *ngIf=\"(cityProperty.touched || cityProperty.dirty) && cityProperty.errors\">\r\n                <small *ngIf=\"cityProperty.errors.required\">Please enter the city </small>\r\n            </span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"jobType\">Status</label>\r\n            <select id=\"jobType\" class=\"form-control\" name=\"status\" [(ngModel)]=\"agentJob.status\">\r\n                <option>Open</option>\r\n                <option>In Process</option>\r\n                <option>Closed</option>\r\n            </select>\r\n        </div>        \r\n        <div class=\"form-group\">\r\n            <label for=\"agentRemarks\">Agent Remarks</label>\r\n            <textarea id=\"agentRemarks\" required class=\"form-control\" name=\"agentRemarks\"\r\n            [(ngModel)]=\"agentJob.agentRemarks\" #agentRemarksProperty=\"ngModel\"  \r\n            placeholder=\"Please enter remarks\" ></textarea>\r\n            <span class=\"help-block\" *ngIf=\"(agentRemarksProperty.touched || agentRemarksProperty.dirty) && agentRemarksProperty.errors\">\r\n                <small *ngIf=\"agentRemarksProperty.errors.required\">Please enter some remarks </small>\r\n            </span>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-dark\" [disabled]=\"!requestForm.valid\">Save Request</button>\r\n    </form>\r\n</div>\r\n<hr>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AgentlistComponent } from './agentlist/agentlist.component';\r\nimport { AgentJobprocessComponent } from './agent-jobprocess/agent-jobprocess.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'', component: AgentlistComponent},\r\n  { path:'request/:id', component: AgentJobprocessComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AgentRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AgentRoutingModule } from './agent-routing.module';\r\nimport { AgentlistComponent } from './agentlist/agentlist.component';\r\n\r\nimport { AgentJobprocessComponent } from './agent-jobprocess/agent-jobprocess.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AgentlistComponent,  AgentJobprocessComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AgentRoutingModule\r\n  ]\r\n})\r\nexport class AgentModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IAgent } from 'src/app/models/agent';\r\nimport { AgentService } from 'src/app/data_service/agent.service';\r\n\r\n@Component({\r\n  selector: 'jos-agentlist',\r\n  templateUrl: './agentlist.component.html',\r\n  styleUrls: ['./agentlist.component.css']\r\n})\r\nexport class AgentlistComponent implements OnInit {\r\n  agentJobList: IAgent[];\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  constructor(private service: AgentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAgentJobs();\r\n  }\r\n\r\n  getAgentJobs(){\r\n    this.service.getAgentJobList().subscribe(\r\n      res=> { this.agentJobList = res },\r\n      error=> this.handleError(error)\r\n    );\r\n  }\r\n\r\n  handleError(error){\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n\r\n\r\n}\r\n","<h1 class=\"display-4\">Assigned Jobs</h1>\r\n\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n\r\n<br>\r\n<div>\r\n    \r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Request Date</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let agentJob of agentJobList\">\r\n                <td>{{agentJob.jobType}}</td>\r\n                <td>{{agentJob.jobDescription}}</td>\r\n                <td>{{agentJob.requestDate}}</td>\r\n                <td>{{agentJob.status}}</td>\r\n                <td><button type=\"button\" class=\"btn btn-outline-dark\" [routerLink]=\"['/agent/request',agentJob.id]\">Process</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { IJobrequest } from '../models/jobrequest';\r\nimport { AuthorizationService } from '../login/authorization.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Loggeduser } from '../models/loggeduser';\r\nimport { IAgent } from '../models/agent';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentService {\r\n  user: Loggeduser;\r\n\r\n  constructor(private authorizationService: AuthorizationService, private http: HttpClient, private config: ConfigService) { }\r\n\r\n  saveAgentAction(request: IAgent) : Observable<any>{\r\n    return this.http.post(this.config.javaUrl + '/jobs',request, this.getOptions());\r\n  }\r\n\r\n  getAgentJobList(): Observable<IAgent[]> {\r\n    //Get the Logged in User\r\n    this.user = this.authorizationService.getLoggedUser();\r\n    //this.http.get<Jobrequest[]>('url', request);\r\n    return this.http.get<IAgent[]>(this.config.javaUrl + '/jobByAgentUser?agentUser='+this.user.userid);\r\n  }\r\n\r\n  getAgentJobById(requestId: string): Observable<any>{\r\n    let jobRequest : IAgent;\r\n    return this.http.get<IAgent>(this.config.javaUrl + '/jobById?id='+requestId);\r\n  }\r\n  getOptions(): any{\r\n    let opt = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\r\n    return opt;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}