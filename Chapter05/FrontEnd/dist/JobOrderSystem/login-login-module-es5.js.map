{"version":3,"sources":["webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts"],"names":["routes","path","component","LoginRoutingModule","forChild","imports","exports","LoginComponent","authService","router","loginErrorMessage","loginForm","valid","userName","form","value","password","login","navigate","redirectUrl","selector","templateUrl","styleUrls","LoginModule","declarations"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'jos-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginErrorMessage: boolean = false;\r\n\r\n  constructor(private authService: AuthorizationService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(loginForm: NgForm){\r\n    if(loginForm && loginForm.valid){\r\n      let userName = loginForm.form.value.userName;\r\n      let password = loginForm.form.value.password;\r\n\r\n      if(this.authService.login(userName, password)){\r\n        this.router.navigate([this.authService.redirectUrl]); //On Success redirect to agent or requester page\r\n      }\r\n      else{\r\n        //Show error message\r\n        this.loginErrorMessage = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"display-4\">Login</h1>\r\n<div>\r\n    <form (ngSubmit)=\"login(loginForm)\" #loginForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <label for=\"email\">Email address</label>\r\n            <input type=\"email\" id=\"email\" name=\"userName\" ngModel class=\"form-control\"  aria-describedby=\"emailHelp\">\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" ngModel class=\"form-control\" id=\"password\" name=\"password\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-dark\">Login</button>\r\n    </form>\r\n    <div *ngIf=\"loginErrorMessage\">\r\n        Please enter the correct UserId and Password\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    LoginRoutingModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"]}