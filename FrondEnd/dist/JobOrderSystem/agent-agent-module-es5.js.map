{"version":3,"sources":["webpack:///src/app/agent/agent-jobprocess/agent-jobprocess.component.ts","webpack:///src/app/agent/agent-jobprocess/agent-jobprocess.component.html","webpack:///src/app/agent/agent-routing.module.ts","webpack:///src/app/agent/agent.module.ts","webpack:///src/app/agent/agentlist/agentlist.component.ts","webpack:///src/app/agent/agentlist/agentlist.component.html","webpack:///src/app/data_service/agent.service.ts"],"names":["AgentJobprocessComponent","service","activatedRoute","agentJob","showError","showSuccess","requestId","snapshot","paramMap","get","getAgentJobById","error","errorMessage","res","successMessage","form","saveAgentAction","subscribe","handleSuccess","handleError","jobId","window","history","back","processAgentJob","selector","templateUrl","styleUrls","routes","path","component","AgentRoutingModule","forChild","imports","exports","AgentModule","declarations","AgentlistComponent","getAgentJobs","getAgentJobList","agentJobList","AgentService","authorizationService","http","config","request","post","javaUrl","getOptions","user","getLoggedUser","userid","jobRequest","opt","headers","set","providedIn"],"mappings":"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","file":"agent-agent-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AgentService } from 'src/app/data_service/agent.service';\r\nimport { IAgent } from 'src/app/models/agent';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'jos-agent-jobprocess',\r\n  templateUrl: './agent-jobprocess.component.html',\r\n  styleUrls: ['./agent-jobprocess.component.css']\r\n})\r\nexport class AgentJobprocessComponent implements OnInit {\r\n\r\n  agentJob = {} as IAgent;\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  showSuccess: boolean = false;\r\n  successMessage: string;\r\n\r\n  constructor(private service:AgentService, private activatedRoute:ActivatedRoute) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    const requestId = this.activatedRoute.snapshot.paramMap.get('id');\r\n    this.getAgentJobById(requestId);\r\n  }\r\n\r\n  handleError(error) {\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n  handleSuccess(res) {\r\n    this.showSuccess = true;\r\n    this.successMessage = 'Job Saved Successfully';\r\n  }\r\n  processAgentJob(form: NgForm) {\r\n    this.service.saveAgentAction(this.agentJob).subscribe(\r\n      res => this.handleSuccess(res),\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  getAgentJobById(jobId: string) {\r\n    this.service.getAgentJobById(jobId).subscribe(\r\n      res => { this.agentJob = res; },\r\n      error => {\r\n        return this.handleError(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  back() {\r\n    window.history.back();\r\n  }\r\n\r\n}\r\n","<h1 class=\"display-4\">Process Job Request</h1>\r\n<div *ngIf=\"showSuccess\" class=\"alert alert-success\">\r\n    {{successMessage}}\r\n</div>\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n<div>\r\n    <form #requestForm=\"ngForm\" (ngSubmit)=\"processAgentJob(requestForm)\">\r\n        <div class=\"form-group\">\r\n            <label for=\"jobType\">Type of Job</label>\r\n            <select id=\"jobType\" class=\"form-control\" name=\"jobType\" [(ngModel)]=\"agentJob.jobType\" disabled=\"false\">\r\n                <option selected>Choose</option>\r\n                <option>Carpentry</option>\r\n                <option>Masonary</option>\r\n                <option>Plumbing</option>\r\n                <option>Air Conditioning</option>\r\n                <option>Others</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"jobDescription\">Description</label>\r\n            <textarea id=\"jobDescription\" required class=\"form-control\" name=\"jobDescription\"\r\n            [(ngModel)]=\"agentJob.jobDescription\" #descriptionProperty=\"ngModel\"  \r\n            placeholder=\"Please enter the Job reqeuest details\"  disabled=\"false\"></textarea>\r\n            <span class=\"help-block\" *ngIf=\"(descriptionProperty.touched || descriptionProperty.dirty) && descriptionProperty.errors\">\r\n                <small *ngIf=\"descriptionProperty.errors.required\">Please enter the description </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label id=\"requestDate\">Preferred Date and Time</label>\r\n            <input id=\"requestDate\" class=\"form-control\" type=\"datetime-local\" name=\"requestDate\"\r\n            [(ngModel)]=\"agentJob.requestDate\"  disabled=\"false\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"contactNo\">Contact No.</label>\r\n            <input id=\"contactNo\" required class=\"form-control\"\r\n            type=\"tel\" #contactProperty=\"ngModel\" name=\"contactNo\" [(ngModel)]=\"agentJob.contactNo\"  disabled=\"false\">\r\n            <span class=\"help-block\" *ngIf=\"(contactProperty.touched || contactProperty.dirty) && contactProperty.errors\">\r\n                <small *ngIf=\"contactProperty.errors.required\">Please enter contact no. </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"address\">Address</label>\r\n            <input id=\"address\" required type=\"text\" class=\"form-control\" \r\n            #addressProperty=\"ngModel\" name=\"address\" [(ngModel)]=\"agentJob.address\"  disabled=\"false\">\r\n            <span class=\"help-block\" *ngIf=\"(addressProperty.touched || addressProperty.dirty) && addressProperty.errors\">\r\n                <small *ngIf=\"addressProperty.errors.required\">Please enter the address </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"city\">City</label>\r\n            <input id=\"city\" required type=\"text\" class=\"form-control\" \r\n            #cityProperty=\"ngModel\" name=\"city\" [(ngModel)]=\"agentJob.city\"  disabled=\"false\">\r\n            <span class=\"help-block\" *ngIf=\"(cityProperty.touched || cityProperty.dirty) && cityProperty.errors\">\r\n                <small *ngIf=\"cityProperty.errors.required\">Please enter the city </small>\r\n            </span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"jobType\">Status</label>\r\n            <select id=\"jobType\" class=\"form-control\" name=\"status\" [(ngModel)]=\"agentJob.status\">\r\n                <option>Open</option>\r\n                <option>In Process</option>\r\n                <option>Closed</option>\r\n            </select>\r\n        </div>        \r\n        <div class=\"form-group\">\r\n            <label for=\"agentRemarks\">Agent Remarks</label>\r\n            <textarea id=\"agentRemarks\" required class=\"form-control\" name=\"agentRemarks\"\r\n            [(ngModel)]=\"agentJob.agentRemarks\" #agentRemarksProperty=\"ngModel\"  \r\n            placeholder=\"Please enter remarks\" ></textarea>\r\n            <span class=\"help-block\" *ngIf=\"(agentRemarksProperty.touched || agentRemarksProperty.dirty) && agentRemarksProperty.errors\">\r\n                <small *ngIf=\"agentRemarksProperty.errors.required\">Please enter some remarks </small>\r\n            </span>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-dark\" [disabled]=\"!requestForm.valid\">Save Request</button>\r\n    </form>\r\n</div>\r\n<hr>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AgentlistComponent } from './agentlist/agentlist.component';\r\nimport { AgentJobprocessComponent } from './agent-jobprocess/agent-jobprocess.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'', component: AgentlistComponent},\r\n  { path:'request/:id', component: AgentJobprocessComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AgentRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AgentRoutingModule } from './agent-routing.module';\r\nimport { AgentlistComponent } from './agentlist/agentlist.component';\r\n\r\nimport { AgentJobprocessComponent } from './agent-jobprocess/agent-jobprocess.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AgentlistComponent,  AgentJobprocessComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AgentRoutingModule\r\n  ]\r\n})\r\nexport class AgentModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IAgent } from 'src/app/models/agent';\r\nimport { AgentService } from 'src/app/data_service/agent.service';\r\n\r\n@Component({\r\n  selector: 'jos-agentlist',\r\n  templateUrl: './agentlist.component.html',\r\n  styleUrls: ['./agentlist.component.css']\r\n})\r\nexport class AgentlistComponent implements OnInit {\r\n  agentJobList: IAgent[];\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  constructor(private service: AgentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAgentJobs();\r\n  }\r\n\r\n  getAgentJobs(){\r\n    this.service.getAgentJobList().subscribe(\r\n      res=> { this.agentJobList = res },\r\n      error=> this.handleError(error)\r\n    );\r\n  }\r\n\r\n  handleError(error){\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n\r\n\r\n}\r\n","<h1 class=\"display-4\">Assigned Jobs</h1>\r\n\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n\r\n<br>\r\n<div>\r\n    \r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Request Date</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let agentJob of agentJobList\">\r\n                <td>{{agentJob.jobType}}</td>\r\n                <td>{{agentJob.jobDescription}}</td>\r\n                <td>{{agentJob.requestDate}}</td>\r\n                <td>{{agentJob.status}}</td>\r\n                <td><button type=\"button\" class=\"btn btn-outline-dark\" [routerLink]=\"['/agent/request',agentJob.id]\">Process</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { IJobrequest } from '../models/jobrequest';\r\nimport { AuthorizationService } from '../login/authorization.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Loggeduser } from '../models/loggeduser';\r\nimport { IAgent } from '../models/agent';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentService {\r\n  user: Loggeduser;\r\n\r\n  constructor(private authorizationService: AuthorizationService, private http: HttpClient, private config: ConfigService) { }\r\n\r\n  saveAgentAction(request: IAgent) : Observable<any>{\r\n    return this.http.post(this.config.javaUrl + '/jobs',request, this.getOptions());\r\n  }\r\n\r\n  getAgentJobList(): Observable<IAgent[]> {\r\n    //Get the Logged in User\r\n    this.user = this.authorizationService.getLoggedUser();\r\n    //this.http.get<Jobrequest[]>('url', request);\r\n    return this.http.get<IAgent[]>(this.config.javaUrl + '/jobByAgentUser?agentUser='+this.user.userid);\r\n  }\r\n\r\n  getAgentJobById(requestId: string): Observable<any>{\r\n    let jobRequest : IAgent;\r\n    return this.http.get<IAgent>(this.config.javaUrl + '/jobById?id='+requestId);\r\n  }\r\n  getOptions(): any{\r\n    let opt = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\r\n    return opt;\r\n  }\r\n}\r\n"]}