{"version":3,"sources":["./src/app/data_service/jobrequest.service.ts","./src/app/jobrequest/jobrequest-routing.module.ts","./src/app/jobrequest/jobrequest.module.ts","./src/app/jobrequest/jobrequest/jobrequestcomponent.ts","./src/app/jobrequest/jobrequest/jobrequest.component.html","./src/app/jobrequest/jobrequestdetail/jobrequestdetail.component.ts","./src/app/jobrequest/jobrequestdetail/jobrequestdetail.component.html","./src/app/jobrequest/jobrequestlist/jobrequestlist.component.ts","./src/app/jobrequest/jobrequestlist/jobrequestlist.component.html"],"names":[],"mappings":"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","file":"jobrequest-jobrequest-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IJobrequest } from '../models/jobrequest';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthorizationService } from '../login/authorization.service';\r\nimport { Loggeduser } from '../models/loggeduser';\r\nimport { ConfigService } from './config.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobrequestService {\r\n\r\n  user: Loggeduser;\r\n\r\n /* requestList: IJobrequest[] = [\r\n    { requestId: '100', requestedBy: 'user', requestDate: '', jobDescription: 'New Job', jobType:'Masonary', contactNo: '055548147', city:'Dubai', address: 'New addres', status:'Open' },\r\n    { requestId: '200', requestedBy: 'user', requestDate: '', jobDescription: 'New Job 2', jobType:'Carpentry', contactNo: '055548147', city:'Dubai', address: 'New addres', status:'Open' }\r\n  ];*/\r\n\r\n  constructor(private authorizationService: AuthorizationService,private http: HttpClient, private config: ConfigService) { }\r\n\r\n  saveJobRequest(request: IJobrequest) : Observable<any>{\r\n    //HTTP Call here\r\n    this.user = this.authorizationService.getLoggedUser();\r\n    request.requestedBy = this.user.userid; //Update the Logged in User ID\r\n    return this.http.post(this.config.nodeUrl + '/jobs',request, this.getOptions());\r\n  }\r\n\r\n  getJobRequestList(): Observable<IJobrequest[]>{\r\n    //Get the Logged in User\r\n    this.user = this.authorizationService.getLoggedUser();\r\n    return this.http.get<IJobrequest[]>(this.config.nodeUrl + '/jobs');\r\n     \r\n  }\r\n\r\n  getJobRequestById(requestId: string): Observable<any>{\r\n    return this.http.get<IJobrequest>(this.config.nodeUrl + '/job?id='+requestId);\r\n  }\r\n\r\n  getOptions(): any{\r\n    let opt = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\r\n    return opt;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { JobrequestlistComponent } from './jobrequestlist/jobrequestlist.component';\r\nimport { JobrequestComponent } from './jobrequest/jobrequestcomponent';\r\nimport { JobrequestdetailComponent } from './jobrequestdetail/jobrequestdetail.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: JobrequestlistComponent},\r\n  { path: 'request', component: JobrequestComponent },\r\n  { path: 'request/:id', component: JobrequestdetailComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class JobrequestRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { JobrequestRoutingModule } from './jobrequest-routing.module';\r\nimport { JobrequestlistComponent } from './jobrequestlist/jobrequestlist.component';\r\nimport { JobrequestComponent } from './jobrequest/jobrequestcomponent';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { JobrequestdetailComponent } from './jobrequestdetail/jobrequestdetail.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [JobrequestlistComponent, JobrequestComponent, JobrequestdetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    JobrequestRoutingModule\r\n  ]\r\n})\r\nexport class JobrequestModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IJobrequest } from 'src/app/models/jobrequest';\r\nimport { JobrequestService } from 'src/app/data_service/jobrequest.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'jos-jobrequest',\r\n  templateUrl: './jobrequest.component.html',\r\n  styleUrls: ['./jobrequest.component.css']\r\n})\r\nexport class JobrequestComponent implements OnInit {\r\n\r\n  jobRequest = {} as IJobrequest;\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  showSuccess: boolean = false;\r\n  successMessage: string;\r\n\r\n\r\n  constructor(private service: JobrequestService)\r\n  {} \r\n  \r\n\r\n  ngOnInit(): void {\r\n    \r\n\r\n  }\r\n\r\n  handleSuccess(res) {\r\n    debugger;\r\n    this.showSuccess = true;\r\n    this.successMessage = 'Job Created Successfully';\r\n  }\r\n  handleError(error) {\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n  onSubmit(form: NgForm) {\r\n    this.service.saveJobRequest(this.jobRequest).subscribe(\r\n      res => this.handleSuccess(res),\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<h1 class=\"display-4\">Create Job Request</h1>\r\n<div *ngIf=\"showSuccess\" class=\"alert alert-success\">\r\n    {{successMessage}}\r\n</div>\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n<div>\r\n    <form #requestForm=\"ngForm\" (ngSubmit)=\"onSubmit(requestForm)\">\r\n        <div class=\"form-group\">\r\n            <label for=\"jobType\">Type of Job</label>\r\n            <select id=\"jobType\" class=\"form-control\" name=\"jobType\" [(ngModel)]=\"jobRequest.jobType\">\r\n                <option selected>Choose</option>\r\n                <option>Carpentry</option>\r\n                <option>Masonary</option>\r\n                <option>Plumbing</option>\r\n                <option>Air Conditioning</option>\r\n                <option>Others</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"jobDescription\">Description</label>\r\n            <textarea id=\"jobDescription\" required class=\"form-control\" name=\"jobDescription\"\r\n            [(ngModel)]=\"jobRequest.jobDescription\" #descriptionProperty=\"ngModel\"  \r\n            placeholder=\"Please enter the Job reqeuest details\"></textarea>\r\n            <span class=\"help-block\" *ngIf=\"(descriptionProperty.touched || descriptionProperty.dirty) && descriptionProperty.errors\">\r\n                <small *ngIf=\"descriptionProperty.errors.required\">Please enter the description </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label id=\"requestDate\">Preferred Date and Time</label>\r\n            <input id=\"requestDate\" class=\"form-control\" type=\"datetime-local\" name=\"requestDate\"\r\n            [(ngModel)]=\"jobRequest.requestDate\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"contactNo\">Contact No.</label>\r\n            <input id=\"contactNo\" required class=\"form-control\"\r\n            type=\"tel\" #contactProperty=\"ngModel\" name=\"contactNo\" [(ngModel)]=\"jobRequest.contactNo\">\r\n            <span class=\"help-block\" *ngIf=\"(contactProperty.touched || contactProperty.dirty) && contactProperty.errors\">\r\n                <small *ngIf=\"contactProperty.errors.required\">Please enter contact no. </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"address\">Address</label>\r\n            <input id=\"address\" required type=\"text\" class=\"form-control\" \r\n            #addressProperty=\"ngModel\" name=\"address\" [(ngModel)]=\"jobRequest.address\">\r\n            <span class=\"help-block\" *ngIf=\"(addressProperty.touched || addressProperty.dirty) && addressProperty.errors\">\r\n                <small *ngIf=\"addressProperty.errors.required\">Please enter the address </small>\r\n            </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"city\">City</label>\r\n            <input id=\"city\" required type=\"text\" class=\"form-control\" \r\n            #cityProperty=\"ngModel\" name=\"city\" [(ngModel)]=\"jobRequest.city\">\r\n            <span class=\"help-block\" *ngIf=\"(cityProperty.touched || cityProperty.dirty) && cityProperty.errors\">\r\n                <small *ngIf=\"cityProperty.errors.required\">Please enter the city </small>\r\n            </span>\r\n        </div>        \r\n        <button type=\"submit\" class=\"btn btn-dark\" [disabled]=\"!requestForm.valid\">Send Request</button>\r\n    </form>\r\n</div>\r\n<hr>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { JobrequestService } from 'src/app/data_service/jobrequest.service';\r\nimport { IJobrequest } from 'src/app/models/jobrequest';\r\n\r\n@Component({\r\n  selector: 'jos-jobrequestdetail',\r\n  templateUrl: './jobrequestdetail.component.html',\r\n  styleUrls: ['./jobrequestdetail.component.css']\r\n})\r\nexport class JobrequestdetailComponent implements OnInit {\r\n\r\n  jobRequest = {} as IJobrequest;\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n\r\n  constructor(private service: JobrequestService, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    const requestId = this.activatedRoute.snapshot.paramMap.get('id');\r\n    this.getJobById(requestId);\r\n  }\r\n\r\n  handleError(error) {\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n\r\n  getJobById(jobId: string) {\r\n    this.service.getJobRequestById(jobId).subscribe(\r\n      res => { this.jobRequest = res; debugger; },\r\n      error => {\r\n        return this.handleError(error);\r\n      }\r\n    )\r\n  }\r\n  back() {\r\n    window.history.back();\r\n  }\r\n}\r\n","<h1 class=\"display-4\">Job Request</h1>\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n<div class=\"card\"> \r\n    <div class=\"card-header\">\r\n        <h4>Job Request</h4>\r\n      </div>    \r\n    <dl class=\"card-body\">\r\n        <dt class=\"col-sm-3\">Type</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.jobType}}</dd>\r\n        <dt class=\"col-sm-3\">Description</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.jobDescription}}</dd>     \r\n        <dt class=\"col-sm-3\">Date</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.requestDate}}</dd>  \r\n        <dt class=\"col-sm-3\">Contact No</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.contactNo}}</dd>     \r\n        <dt class=\"col-sm-3\">Address</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.address}}</dd>   \r\n        <dt class=\"col-sm-3\">City</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.city}}</dd>    \r\n        <dt class=\"col-sm-3\">Status</dt>\r\n        <dd class=\"col-sm-9\">{{jobRequest.status}}</dd>                                                \r\n    </dl>\r\n</div>\r\n<hr>\r\n<button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"back()\">Back</button>","import { Component, OnInit } from '@angular/core';\r\nimport { IJobrequest } from 'src/app/models/jobrequest';\r\nimport { JobrequestService } from 'src/app/data_service/jobrequest.service';\r\n\r\n@Component({\r\n  selector: 'jos-jobrequestlist',\r\n  templateUrl: './jobrequestlist.component.html',\r\n  styleUrls: ['./jobrequestlist.component.css']\r\n})\r\nexport class JobrequestlistComponent implements OnInit {\r\n\r\n  requestList: IJobrequest[];\r\n  showError: boolean = false;\r\n  errorMessage: string;\r\n  constructor(private service: JobrequestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getJobList();\r\n  }\r\n\r\n  getJobList(){\r\n    this.service.getJobRequestList().subscribe(\r\n      res=> { this.requestList = res; debugger; },\r\n      error=> this.handleError(error)\r\n    );\r\n  }\r\n\r\n  handleError(error){\r\n    this.showError = true;\r\n    this.errorMessage = error;\r\n  }\r\n}\r\n","<h1 class=\"display-4\">Job Requests</h1>\r\n\r\n<div *ngIf=\"showError\" class=\"alert alert-danger\">\r\n    {{errorMessage}}\r\n</div>\r\n\r\n<div>\r\n    <button class=\"btn btn-outline-secondary\" type=\"button\" routerLink=\"/jobrequest/request\">Create Job Request</button>\r\n</div>\r\n<br>\r\n<div>\r\n    \r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Request Date</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let request of requestList\">\r\n                <td>{{request.jobType}}</td>\r\n                <td>{{request.jobDescription}}</td>\r\n                <td>{{request.requestDate}}</td>\r\n                <td>{{request.status}}</td>\r\n                <td><button type=\"button\" class=\"btn btn-outline-dark\" [routerLink]=\"['/jobrequest/request',request._id]\">Display</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>"],"sourceRoot":"webpack:///"}