{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/agent/agent.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/jobrequest/jobrequest.guard.ts","webpack:///src/app/login/authorization.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AgentGuard","authorizationService","router","next","state","url","path","isUserLoggedIn","user","role","navigate","providedIn","routes","component","redirectTo","pathMatch","loadChildren","LoginModule","JobrequestModule","canActivate","AgentModule","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","title","logout","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","JobrequestGuard","AuthorizationService","userName","password","userid","name","localStorage","setItem","JSON","stringify","redirectUrl","parse","getItem","removeItem","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthorizationService } from '../login/authorization.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentGuard implements CanActivate {\r\n  constructor(private authorizationService: AuthorizationService, private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      debugger;\r\n      let url = next.url[0].path;\r\n      if (this.authorizationService.isUserLoggedIn()) {\r\n  \r\n        if (url == \"agent\" && this.authorizationService.user.role == \"agent\")\r\n          return true;\r\n        else\r\n          this.router.navigate(['/login']);\r\n      }\r\n      else {\r\n        this.router.navigate(['/login']);\r\n      }\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JobrequestGuard } from './jobrequest/jobrequest.guard';\r\nimport { AgentGuard } from './agent/agent.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'home', component: HomeComponent },\r\n  { path: '', redirectTo:'home', pathMatch:'full'},\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./login/login.module').then(module=>module.LoginModule)\r\n  },\r\n  {\r\n    path: 'jobrequest',\r\n    loadChildren:() => import('./jobrequest/jobrequest.module').then(module=>module.JobrequestModule),\r\n    canActivate:[JobrequestGuard]\r\n\r\n  },\r\n  {\r\n    path: 'agent',\r\n    loadChildren:() => import('./agent/agent.module').then(module=>module.AgentModule),\r\n    canActivate: [AgentGuard]\r\n  }    \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthorizationService } from './login/authorization.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'jos-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'JobOrderSystem';\r\n\r\n  constructor(public authorizationService: AuthorizationService, private router: Router){\r\n\r\n  }\r\n\r\n  logOut(){\r\n    debugger;\r\n    this.authorizationService.logout();\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n  <a class=\"navbar-brand\" href=\"#\">JOS</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/jobrequest\">Job Request</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/agent\">Agent Jobs</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <form class=\"form-inline\">\r\n    <div *ngIf=\"!authorizationService.isUserLoggedIn()\"><button  class=\"btn btn-sm btn-outline-secondary\" type=\"button\" routerLink=\"/login\">Login</button></div>\r\n    <div *ngIf=\"authorizationService.isUserLoggedIn()\"><button  class=\"btn btn-sm btn-outline-secondary\" type=\"button\" (click)=\"logOut()\">Logout</button></div>\r\n  </form>\r\n</nav>\r\n<div class=\"container\" style=\"padding-top: 55px;\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n    \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'jos-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 class=\"display-4 text-center\">Job Orders System\r\n    \r\n</h1>\r\n<h3>\r\n    <small class=\"text-muted\">JOS is an online ordering platform built on a microservices architecture. This cloud native applicaiton utilizes Azure as the cloud platform. VS Code is the editor of choice for the JOS team!! </small>\r\n  </h3>\r\n  <br>\r\n<div id=\"carouselExampleIndicators\" class=\"carousel slide halfheight\" data-ride=\"carousel\">\r\n    <ol class=\"carousel-indicators\">\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n    </ol>\r\n    <div class=\"carousel-inner\">\r\n        <div class=\"carousel-item active\">\r\n            <div class=\"container\">\r\n                <img src=\"/assets/img1.jpg\" class=\"d-block w-100 h-50\" alt=\"...\">\r\n            </div>\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n            <img src=\"/assets/img2.jpg\" class=\"d-block w-100 h-50\" alt=\"...\">\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n            <img src=\"/assets/img3.jpg\" class=\"d-block w-100 h-50\" alt=\"...\">\r\n        </div>\r\n    </div>\r\n    <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Previous</span>\r\n    </a>\r\n    <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Next</span>\r\n    </a>\r\n</div>\r\n<br>\r\n<div class=\"d-flex justify-content-center\">\r\n    <div class=\"col-md-4\">\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n            <img src=\"/assets/cardimg1.jpg\" class=\"card-img-top\" alt=\"Car Cleaning\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-text\">Car cleaing service at your door step. Quality work with minimal price.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n            <img src=\"/assets/cardimg2.jpg\" class=\"card-img-top\" alt=\"Car Cleaning\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-text\">HVAC and home AC maintenance services.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n            <img src=\"/assets/cardimg3.jpg\" class=\"card-img-top\" alt=\"Car Cleaning\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-text\">Plumbing services ranging from quick fixes to full fledge plumbing work.</p>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthorizationService } from '../login/authorization.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobrequestGuard implements CanActivate {\r\n\r\n  constructor(private authorizationService: AuthorizationService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    let url = next.url[0].path;\r\n    if (this.authorizationService.isUserLoggedIn()) {\r\n\r\n      if (url == \"jobrequest\" && this.authorizationService.user.role == \"user\")\r\n        return true;\r\n      else\r\n        this.router.navigate(['/login']);\r\n    }\r\n    else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Loggeduser } from '../models/loggeduser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n\r\n  user : Loggeduser;\r\n  redirectUrl: string;\r\n\r\n  constructor() { }\r\n\r\n  login(userName: string, password: string): boolean {\r\n\r\n    if ((userName == 'agent1' || userName == 'agent2' || userName == 'agent3') && password != 'agentpass') {\r\n      return false;\r\n    }\r\n    else if (userName == 'user' && password != 'userpass') {\r\n      return false;\r\n    }\r\n    //Successfull login set user information    \r\n    \r\n    if (userName == 'agent1' || userName == 'agent2' || userName == 'agent3') {\r\n      this.user = {\r\n        userid : userName,\r\n        role : 'agent',\r\n        name : 'Job Processing Agent'\r\n      }\r\n      localStorage.setItem('userObject', JSON.stringify(this.user));\r\n      this.redirectUrl = '/agent';\r\n      return true;\r\n    }\r\n    else if (userName == 'user') {\r\n      this.user = {\r\n        userid : userName,\r\n        role : 'user',\r\n        name : 'Job Requester'\r\n      }      \r\n      localStorage.setItem('userObject', JSON.stringify(this.user));\r\n      this.redirectUrl = '/jobrequest';\r\n      return true;\r\n    }\r\n  }\r\n\r\n  isUserLoggedIn(): boolean {\r\n    this.user = JSON.parse(localStorage.getItem('userObject'));\r\n    if (this.user != null)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  logout(): void {\r\n    this.user = null;\r\n    localStorage.removeItem('userObject');\r\n  }\r\n\r\n  getLoggedUser(): Loggeduser {\r\n    this.user = JSON.parse(localStorage.getItem('userObject'));\r\n    return this.user;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}